"MZ curated vim settings


" we put this first to geet pathogen [Pathogyn is not working for me]
" https://marisks.net/2015/10/14/getting-started-with-vim-on-windows/
execute pathogen#infect() 
syntax on
filetype plugin indent on
"from https://nvie.com/posts/how-i-boosted-my-vim

call plug#begin('/mnt/c/Users/E125967/vimfiles/plugged')
" shorthand notation; fetches https://github.com/junegunn/vim-easy-align
Plug 'junegunn/vim-easy-align'


Plug 'vim-airline/vim-airline'

Plug 'vim-airline/vim-airline-themes'

Plug 'https://tpope.io/vim/fugitive.git'


" Initialize plugin system
 call plug#end()
"
"

"this must be first, because it changes other options as side effect
set nocompatible

set history=1000         " remember more commands and search history
set undolevels=1000      " use many muchos levels of undo
set wildignore=*.swp,*.bak,*.pyc,*.class
set title                " change the terminal's title
set visualbell           " don't beep
set noerrorbells         " don't beep

" remove backup and swap file
"set nobackup
"set noswapfile

" another optino is to have vim save them in a sep directory

"set backup file
set backup

" tell vim where to put its backup files
set backupdir=C:\\Users\mkzak

" tell vim where to put swap files
" This assumes the you made a file called TemForVim under the path below
set dir=C:\\Users\mkzak\TempForVim
"t_Co >= 256 || has("gui_running")
"    colorscheme mustang
"    endif

 "   if &t_Co > 2 || has("gui_running")
        " switch syntax highlighting on, when the terminal has colors
"	    syntax on
"	    endif

set mouse=a

if has('gui_running')
  set guifont=Lucida_Console:h18
    endif

"set indentation  
set autoindent

"check syntax
syntax enable  


" below are from https://dougblack.io/words/a-good-vimrc.html

" UI Layout {{{
set number              " show line numbers
set showcmd             " show command in bottom bar
set cursorline        " highlight current line
set wildmenu
set lazyredraw
set showmatch           " higlight matching parenthesis
""set fillchars+=vert:| "don't know what this deos
" }}}

colo desert " a color scheme that works.. 
"colorscheme badwolf         " awesome colorscheme

set tabstop=4       " number of visual spaces per TAB

filetype indent on      " load filetype-specific indent files

set incsearch           " search as characters are entered
set hlsearch            " highlight matches

" turn off search highlight
nnoremap <leader><space> :nohlsearch<CR>

" to see status bar
" https://shapeshed.com/vim-statuslines/
set laststatus=2


function! GitInit()
	return system("git init")
endfunction

function! GitBranch()
  return system("git rev-parse --abbrev-ref HEAD 2>/dev/null | tr -d '\n'")
endfunction

function! StatuslineGit()
  let l:branchname = GitInit()	
  let l:branchname = GitBranch()
  return strlen(l:branchname) > 0?'  '.l:branchname.' ':''
endfunction

set statusline=
set statusline+=%#PmenuSel#
"set statusline+=%{StatuslineGit()}
set statusline+=%#LineNr#
set statusline+=\ %F "prints file path and \ is an escape before a space separatpr
set statusline+=%m\
set statusline+=%{FugitiveStatusline()} " shows current branch on git
set statusline+=%= "from now all is right alined
set statusline+=%#CursorColumn# "print curser column
set statusline+=\ %y "file tye
set statusline+=\ %{&fileencoding?&fileencoding:&encoding}
set statusline+=\[%{&fileformat}\]
set statusline+=\ %p%%
set statusline+=\ %l:%c
set statusline+=\  "separator
set statusline+=%L "locla lines

"set statusline=2
"set statusline='helloworld\n'
"set statusline=
"set statusline+='helloFrom_gvimrc'
" print full path
"set statusline+=%F
"set statusline=
"set statusline+=%{StatuslineGit()}
